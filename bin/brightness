#!/bin/bash
(
	flock -xn 200 || exit

	# real max = 24242 = 2 * 17 * 23 * 31
	max=17

	# f(i) = x^i ⋅ y + z
	# x^0 ⋅ y + z = 0
	# x^1 ⋅ y + z = n
	# x^17 ⋅ y + z = 24242
  #
	# f(0) = 0
	# y + z = 0
	# y = -z
  #
	# f(1) = f
	# x ⋅ -z + z = n
	# z(1 - x) = n
	# z = n/(1 - x)
  #
	# f(i) = x^i ⋅ -z + z
	# f(i) = z(1 - x^i)
	# f(i) = n/(1 - x) ⋅ (1 - x^i)
  #
	# f(17) = 24242
	# n/(1 - x) ⋅ (1 - x^17) = 24242
	# n ⋅ (1 - x^17) = 24242(1 - x)
	# n - nx^17 = 24242 - 24242x
	# -nx^17 + 24242x + n - 24242 = 0
	# nx^17 - 24242x + 24242 - n = 0
	#
	# n = 100
	# x = 1.2836568335833889385

	n=100
	x=1.2836568335833889385


	get() {
		lua -e "print(math.floor(math.log(1 - $(cat /sys/class/backlight/intel_*/brightness) * (1 - $x)/$n)/math.log($x)))"
	}
	change() {
		lua -e "print(math.ceil($n/(1 - $x) * (1 - math.pow($x, $1))))" > /sys/class/backlight/intel_*/brightness
	}
	current=$(get)

	case $1 in
		+)
			current=$(($current + 1))
			;;

		-)
			current=$(($current - 1))
			;;

		max)
			current=$max
			;;

		*)
			if [[ "$1" != "" ]]; then
				current=$1
			fi
			;;
	esac

	(( $current > $max )) && current=$max
	(( $current < 0 )) && current=0
	change $current

	out="☀ [$(bar $max $current)]"
	echo "$out"

	dunstify "☀ Brightness ☀" \
		-t 2000 \
		-h string:x-canonical-private-synchronous:brightness \
		-h int:value:"$(lua -e "print(math.floor($current/$max * 100))")"

	if [[ $(get) != $current ]]; then
		echo $(get) $current
	fi
) 200>/run/user/$(id -u)/$DISPLAY-backlight.lock
