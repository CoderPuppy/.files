#!/bin/bash
(
flock -en 200 || exit

sink="@DEFAULT_SINK@"

for cmd in $@; do
	case $1 in
		+)
			pactl set-sink-volume "$sink" +2%
			;;

		-)
			pactl set-sink-volume "$sink" -2%
			;;

		mt|mute=toggle|mute-toggle)
			pactl set-sink-mute "$sink" toggle
			;;

		m|mute=true|mute)
			pactl set-sink-mute "$sink" true
			;;

		um|mute=false|unmute)
			pactl set-sink-mute "$sink" false
			;;

		[0-9]*)
			pactl set-sink-volume "$sink" "$(("$1" * 2))%"
			;;

		[+-][0-9]*)
			pactl set-sink-volume "$sink" "${1%%[0-9]*}$(("${1#[+-]}" * 2))%"
			;;

		*)
			echo "Invalid command: $cmd" 1>&2
	esac
done

mute="$(pactl get-sink-mute "$sink" | rg -or'$1' '^Mute: (yes|no)$')"

volume="$(("$(pactl get-sink-volume "$sink" | rg -or'$1' '(\d+)%' | tail -n1)" / 2))"
(( $volume > 50 )) && volume=50
(( $volume < 0 )) && volume=0
pactl set-sink-volume "$sink" "$(("$volume" * 2))%"

if [[ "$mute" = "yes" ]]; then
	out="Muted "
else
	out="Volume "
fi
out="$out[$(bar 50 $volume)]"
echo "$out"

if test "$mute" = "yes"; then
	mute_text=" [Muted]"
else
	mute_text=""
fi
dunstify "ðŸ”Š Volume$mute_text ðŸ”Š" \
	-t 2000 \
	-h string:x-canonical-private-synchronous:volume \
	-h int:value:"$((volume * 2))"

) 200>/run/user/$(id -u)/$DISPLAY-volume.lock
