export CPUP_LAST_PATH="$PATH"
export PATH="$HOME/.local/bin:${CPUP_FIRST_PATH:="$PATH"}:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
export CPUP_FIRST_PATH
export LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"

export SHELL=`which zsh`
if which chromium 2>&1 >/dev/null; then
	export BROWSER=chromium
elif which google-chrome-stable 2>&1 >/dev/null; then
	export BROWSER=google-chrome-stable
fi
export GTK_IM_MODULE=xim
export QT_IM_MODULE=xim
export EDITOR=nvim
#which subl 2>&1 > /dev/null && export EDITOR=subl\ -w
export TERMINAL=st
export LC_ALL=en_US.UTF-8
export LIBVA_DRIVER_NAME=iHD

{ # ssh
	export SSH_ASKPASS=/usr/lib/ssh/ssh-askpass
	mkdir /run/user/$(id -u)/keyring 2>/dev/null
	export SSH_AUTH_SOCK=/run/user/$(id -u)/keyring/ssh
}

{ # ssl
	export SSL_CERT_DIR=/etc/ssl/certs
	[[ -f $SSL_CERT_DIR/ca-certificates.crt ]] && export SSL_CERT_FILE=$SSL_CERT_DIR/ca-certificates.crt
	[[ -f $SSL_CERT_DIR/ca-bundle.crt ]] && export SSL_CERT_FILE=$SSL_CERT_DIR/ca-bundle.crt
	export GIT_SSL_CAINFO=$SSL_CERT_FILE
	export CURL_CA_BUNDLE=$SSL_CERT_FILE
}

{ # dotnet
	export PATH="$PATH:$HOME/.dotnet/tools/"
	export DOTNET_ROOT=/opt/dotnet/
}

{ # go
	export GOPATH=$HOME/code/go
	export PATH="$PATH:$GOPATH/bin"
}

{ # guix
	export GUIX_LOCPATH=$HOME/.guix-profile/lib/locale
	export PATH="$HOME/.config/guix/current/bin:$HOME/.guix-profile/bin:$PATH"
	export INFOPATH="$HOME/.config/guix/current/share/info:$HOME/.guix-profile/share/info:$INFOPATH"
}

# haskell
export PATH="$HOME/.cabal/bin:$PATH"

{ # java
	export _JAVA_AWT_WM_NONREPARENTING=1
	export JAVA_HOME=/usr/lib/jvm/default
}

{ # lua
	export PATH="$HOME/.luaenv/bin:$PATH"
	export PATH="$HOME/.luaenv/shims:${PATH}"
	luaenv() {
		local command
		command="$1"
		if [ "$#" -gt 0 ]; then
			shift
		fi

		case "$command" in
		rehash|shell)
			eval "`luaenv "sh-$command" "$@"`";;
		*)
			command luaenv "$command" "$@";;
		esac
	}
}

{ # node
	export PATH="$HOME/.nodenv/bin:$PATH"
	export PATH="$HOME/.nodenv/shims:${PATH}"
	export NODENV_SHELL=zsh
	nodenv() {
		local command
		command="${1:-}"
		if [ "$#" -gt 0 ]; then
			shift
		fi

		case "$command" in
		rehash|shell)
			eval "$(nodenv "sh-$command" "$@")";;
		*)
			command nodenv "$command" "$@";;
		esac
	}
}

{ # ooc
	export OOC_HOME="$HOME/.ooc"
	export PATH="$OOC_HOME/bin:$PATH"
	export OOC_LIBS="$OOC_HOME/libs"
}

{ # python
	export PYENV_ROOT=~/.pyenv
	export PATH="$PYENV_ROOT/bin:$PATH"
	export PATH="$PYENV_ROOT/shims:${PATH}"
	export PYENV_SHELL=zsh
	pyenv() {
		local command
		command="${1:-}"
		if [ "$#" -gt 0 ]; then
			shift
		fi

		case "$command" in
		rehash|shell)
			eval "$(pyenv "sh-$command" "$@")";;
		*)
			command pyenv "$command" "$@";;
		esac
	}
}

# ruby
{
	export PATH="$HOME/.rbenv/bin:$PATH:$HOME/.gem:$HOME/.gem/ruby/2.3.0/bin"
	export PATH="$HOME/.rbenv/shims:${PATH}"
	export RBENV_SHELL=zsh
	rbenv() {
		local command
		command="${1:-}"
		if [ "$#" -gt 0 ]; then
			shift
		fi

		case "$command" in
		rehash|shell)
			eval "$(rbenv "sh-$command" "$@")";;
		*)
			command rbenv "$command" "$@";;
		esac
	}
}

mcd() {
	mkdir -p "$1"
	cd "$1"
}

export dmenu_colors='-sf \#af865a -sb \#4A3637 -nf \#c0b18b -nb \#1f1f1f'
export dmenu_opts="-i"

export GCM_CREDENTIAL_STORE=gpg
