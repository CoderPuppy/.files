#!/bin/bash

source $(dirname $0)/config

panel_cd() {
	disk=/dev/sr?
	echo -n "%{A:eject $disk:}"
	if [[ "$(cd-status $disk)" = "disk ok" ]]; then
		echo -n "%{F$COLOR_URGENT}"
	else
		echo -n "%{F$COLOR_ICON}"
	fi
	echo -n ""
	echo -n "%{F-}%{A}"
}

panel_pianod() {
	if pgrep -cx pianod &> /dev/null; then
		echo -n "%{A:pianoc p:}"
		if pianoc c status > /dev/null; then
			echo -n "%{F$COLOR_URGENT}"
		else
			echo -n "%{F$COLOR_ICON}"
		fi
		echo -n "%{F-}%{A} "
		echo -n "$(pianoc c title) by $(pianoc c artist)"
		if [[ "$(pianoc c rating)" = "good" ]]; then
			echo -n "%{F$COLOR_URGENT}"
			echo -n " %{A:pianoc ok:}%{A}"
		else
			echo -n "%{F$COLOR_ICON}"
			echo -n " %{A:pianoc love:}%{A}"
		fi
		echo -n "%{F-}"
		echo -n "%{F$COLOR_ICON}"
		echo -n " %{A:pianoc ban:}%{A}"
		echo -n "%{F-}"
	fi
}

panel_pithos() {
	if pgrep -cx pithos &> /dev/null; then
		echo -n "%{A:pithosc p:}%{F$COLOR_ICON}%{F-}%{A} "
		echo -n "$(pithosc c title)"
		echo -n "%{F$COLOR_ICON}"
		echo -n " %{A:pithosc love:}%{A}"
		echo -n " %{A:pithosc ban:}%{A}"
		echo -n "%{F-}"
	fi
}

panel_wifi() {
	local QUAL=`iwconfig $WIRELESS | grep 'Link Quality=' | awk '{gsub(/[=/]/," "); print $3}'`
	local MAX=`iwconfig $WIRELESS | grep 'Link Quality=' | awk '{gsub(/[=/]/," "); print $4}'`
	local PERC=`echo $QUAL*100/$MAX | bc`
	local SSID=`iw dev wlp3s0 link | ag -o 'SSID: .+' | sed 's/^SSID: //'`

	local icon=""
	case $PERC in
		[0-4])
			icon=""
		;;
		[4-9])
			icon=""
		;;
		[2-3]*)
			icon=""
		;;
		[4-5]*)
			icon=""
		;;
		[6-7]*)
			icon=""
		;;
		*)
			icon=""
		;;
	esac

	echo -n "%{F$COLOR_ICON}$icon%{F-} $SSID"
}

panel_battery() {
	local BAT=`acpi -b | awk '{gsub(/%,/,""); print $4}' | sed 's/%//g'`
	local TIME=`acpi -b | ag -o '\d{2}:\d{2}'`
	local STATUS=`acpi -b | awk '{gsub(/,/,""); print $3}'`

	# Set Icon
	local icon=""
	if [[ $STATUS != "Discharging" ]]; then
		icon=""
	elif [[ $BAT -lt 10 ]]; then
		icon=""
	elif [[ $BAT -lt 40 ]]; then
		icon=""
	elif [[ $BAT -lt 70 ]]; then
		icon=""
	else
		icon=""
	fi

	# Create Bar
	echo -n "%{F$COLOR_ICON}$icon%{F-} $BAT $TIME"
}

panel_time() {
	echo -n "%{F$COLOR_ICON}%{F-} $(date +'%H:%M %b %d %a') "

	# case $(date +%b) in
	# esac
	#
	# echo -n $(date +%d)
	#
	# case $(date +%a) in
	# 	Sun) echo -n s;;
	# 	Mon) echo -n M;;
	# 	Tue) echo -n t;;
	# 	Wed) echo -n W;;
	# 	Thu) echo -n T;;
	# 	Fri) echo -n F;;
	# 	Sat) echo -n S;;
	# esac
}

sysinfo() {
	panel_cd
	echo -n " "
	panel_pianod
	panel_pithos
	echo -n "  "
	panel_wifi
	echo -n "  "
	panel_battery
	echo -n "  "
	panel_time
}

while read -r line ; do
    case $line in
        change:*)
						unset wm_infos
						typeset -A wm_infos
						for item in `~/.files/i3/i3-workspaces | sort`; do
							# echo $item
							name=$(echo "$item" | cut -d '|' -f 1)
							raw_name=$name
							name=${name#?:}
							# name=${name#_}
							# name=${name#!}
							active=$(echo "$item" | cut -d '|' -f 2)
							urgent=$(echo "$item" | cut -d '|' -f 3)
							monitor=$(echo "$item" | cut -d '|' -f 4)
							case $active$urgent in
									TF)
											# active desktop
											wm_infos[$monitor]="${wm_infos[$monitor]} %{A:i3-msg workspace $(echo $raw_name | sed 's/:/\\:/'):}%{U$COLOR_ACTIVE}%{+u} $name %{-u}%{A}"
											;;
									FF)
											# inactive but occupied desktop
											wm_infos[$monitor]="${wm_infos[$monitor]} %{A:i3-msg workspace $(echo $raw_name | sed 's/:/\\:/'):} $name %{A}"
											;;
									?T)
											# urgent desktop
											wm_infos[$monitor]="${wm_infos[$monitor]} %{A:i3-msg workspace $(echo $raw_name | sed 's/:/\\:/'):}%{U$COLOR_URGENT}%{+u} $name %{-u}%{A}"
											;;
									*)
											echo $item >&2
											;;
							esac
						done
						LVDS1_infos="${wm_infos[LVDS1]}"
						VGA1_infos="${wm_infos[VGA1]}"
            ;;
    esac
    printf "%s" "%{Sl}$LVDS1_infos%{r} "
		sysinfo
		if [[ "$(cat /sys/class/drm/card0-VGA-1/status)" = "connected" ]]; then
			printf "%s" "%{Sf}%{l}$VGA1_infos%{r} "
			sysinfo
		fi
		printf "\n"
done
